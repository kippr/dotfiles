#!/usr/bin/env ruby
# Pipe the results of a git (show/log) --numstat into this to see summary of changes

NUMSTAT_RE = /^(\d+)\s+(\d+)\s+(\S+)$/

numstats = ARGF.each_line.collect{|l| l.match(NUMSTAT_RE)}.compact.collect(&:captures)

numstats = numstats.collect do |added, deleted, name|
    [name, added.to_f - deleted.to_f, added.to_f, deleted.to_f]
end

def filetype filename
    return '-' unless filename
    match = filename.match(/\S\.([^\.]*)$/)
    filetype = match ? match[1] : '-'
    {'py' => 'Python', 'rb' => 'Ruby'}.fetch(filetype, filetype)
end

def fileclass filename
    case filename
    when /test(s)?\./
        'Tests'
    when /spec(_helper)?\.rb$/
        'Specs'
    else
        'Production'
    end
end

def category filename
    [filetype(filename), fileclass(filename)]
end

by_type = Hash[numstats.group_by{ |name,* | filetype name }.collect{ |k,v| [k, v.inject(0){|sum, data| sum + data[1]}]}]
all = by_type.values.inject(&:+)
categorized = numstats.group_by{ |name,*| category name }.sort

puts "Type            /   Class                 Net        +        -    Churn   %/Type   %/Total"
categorized.each do |type_and_class,data|
    filetype, fileclass = type_and_class
    totals = data.inject([0,0,0]) do |totals,filedata|
        totals.zip(filedata[1..-1]).collect{|a,b| a + b}
    end
    net, added, removed = totals
    churn  = 100 - (net/added * 100)
    percent_of_type = net / by_type[filetype] * 100
    percent_of_all = net / all * 100
    puts "%-15s /   %-15s   %7i  %7i  %7i   %5.0f%%  %6.0f%%   %6.0f%%" % \
            [filetype, fileclass, net, added, removed, churn, percent_of_type, percent_of_all]
end
