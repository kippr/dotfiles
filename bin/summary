#!/usr/bin/env ruby
# Pipe the results of a git (show/log) --numstat into this to see summary of changes

NUMSTAT_RE = /^(\d+)\s+(\d+)\s+(\S+)$/

numstats = ARGF.each_line.collect{|l| l.match(NUMSTAT_RE)}.compact.collect(&:captures)

numstats = numstats.collect do |added, deleted, name|
    [name, added.to_f - deleted.to_f, added.to_f, deleted.to_f]
end

def filetype filename
    filetype = filename.match(/\.([^\.]*)$/)[1]
    {'py' => 'Python', 'rb' => 'Ruby'}.fetch(filetype, filetype)
end

def fileclass filename
    case filename
    when /test(s)?\./
        'Tests'
    when /spec(_helper)?\.rb$/
        'Specs'
    else
        'Production'
    end
end

def category filename
    [filetype(filename), fileclass(filename)]
end

categorized = numstats.group_by{ |name,*| category(name) }.sort

categorized.each do |type_and_class,data|
    filetype, fileclass = type_and_class
    totals = data.inject([0,0,0]) do |totals,filedata|
        totals.zip(filedata[1..-1]).collect{|a,b| a + b}
    end
    net, added, removed = totals
    puts "%-10s /   %-13s - %4i %4i+ %4i-  %5.0f%% net/add" % [filetype, fileclass, net, added, removed, net/added * 100]
end
